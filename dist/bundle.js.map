{"version":3,"file":"bundle.js","sources":["../src/index.ts"],"sourcesContent":["import { Options, Handler, CustomEntry, UnobserveFn } from './index.types'\n\n/**\n * Given a set of options, DOM node and in and out of viewport handlers,\n * this function uses an IntersectionObserver to figure out whether\n * the DOM node is in viewport or not and calls the respective handler.\n * It is a curried function and expects the parameters in the not so\n * common order so as to make it easier to observe multiple DOM nodes\n * with the same settings/options and maybe even the same handlers.\n *\n * @param {object} opts - options to configure the viewport\n * and intersection threshold\n * @param {function} inHandler - fn to call when element is in viewport\n * for each given threshhold\n * @param {function} outHandler - fn to call when element leaves viewport\n * @param {Node} el - target element to observe\n *\n * @return {function} unobserve element function\n */\nexport function observeElementInViewport(\n  el: HTMLElement | null,\n  inHandler: Handler,\n  outHandler: Handler,\n  opts: Partial<Options>\n): UnobserveFn {\n  if (!el) {\n    throw new Error('Target element to observe should be a valid DOM Node')\n  }\n\n  const defaultOptions: Options = {\n    // null for window, otherwise give css selector.\n    // el to be observed should be a child of element given by this selector\n    viewport: null,\n\n    // accepts px and %\n    modTop: '0px',\n    modRight: '0px',\n    modBottom: '0px',\n    modLeft: '0px',\n\n    // percentage of el that should intersect with viewport to consinder\n    // it \"in viewport\". 0 means on the 1st pixel intersection or exit,\n    // the respective handler will be called\n    threshold: [0]\n  }\n\n  const {\n    viewport,\n    modTop,\n    modLeft,\n    modBottom,\n    modRight,\n    threshold\n  }: Options = Object.assign({}, defaultOptions, opts)\n\n  // The mod 101 is to prevent threshold from being greater than 1\n  const thresholdArray: number[] = Array.isArray(threshold)\n    ? threshold.map(t => Math.floor(t % 101) / 100)\n    : [Math.floor(threshold ? threshold % 101 : 0) / 100]\n\n  const minThreshold: number = Math.min(...thresholdArray)\n\n  if (!Array.isArray(threshold) && !(typeof threshold === 'number')) {\n    throw new Error('threshold should be a number or an array of numbers')\n  }\n\n  const intersectionObserverOptions: IntersectionObserverInit = {\n    root: viewport instanceof Node ? viewport : null,\n    rootMargin: `${modTop} ${modRight} ${modBottom} ${modLeft}`,\n    threshold: thresholdArray\n  }\n\n  const isDebugEnabled: boolean =\n    localStorage.debug &&\n    localStorage.debug.includes('observeElementInViewport')\n\n  if (isDebugEnabled) {\n    console.log('IntersectionObserver options', intersectionObserverOptions)\n  }\n\n  const cb = (entries: Array<CustomEntry>, observer: IntersectionObserver) => {\n    const entryForEl = entries.filter(entry => entry.target === el)[0]\n    const unobserve: UnobserveFn = () => observer.unobserve(el)\n\n    if (entryForEl) {\n      const { isIntersecting, intersectionRatio } = entryForEl\n\n      entryForEl.isInViewport =\n        isIntersecting && intersectionRatio >= minThreshold\n\n      if (entryForEl.isInViewport) {\n        inHandler(entryForEl, unobserve, el)\n      } else {\n        outHandler(entryForEl, unobserve, el)\n      }\n    }\n  }\n\n  const observer = new IntersectionObserver(cb, intersectionObserverOptions)\n\n  observer.observe(el)\n\n  return () => observer.unobserve(el)\n}\n\nexport const isInViewport = async (\n  el: HTMLElement | null,\n  opts: Partial<Options>\n) => {\n  return new Promise((resolve, reject) => {\n    try {\n      observeElementInViewport(\n        el,\n        (_, unobserve) => {\n          unobserve()\n          resolve(true)\n        },\n        (_, unobserve) => {\n          unobserve()\n          resolve(false)\n        },\n        opts\n      )\n    } catch (e) {\n      reject(e)\n    }\n  })\n}\n"],"names":[],"mappings":"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"}